name: CI/CD

on:
  push:
    branches: main
  pull_request:
    branches: main
  workflow_dispatch:

permissions: {}

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          activate-environment: true

      - name: Set up venv
        run: |
          uv sync

      - name: Check code formatting
        run: uv run ruff format --check .

      - name: Check for code errors
        run: uv run ruff check .

      - name: Run type checking
        run: uv run mypy .

      - name: Run tests
        env:
          DATABASE_URL: "sqlite+aiosqlite:///:memory:"
        run: |
          uv run pytest -v

  docker:
    needs: lint
    if: ${{ github.ref == 'refs/heads/main' }}
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            platform: amd64
          - os: ubuntu-24.04-arm
            platform: arm64
    runs-on: ${{matrix.os}}
    permissions:
      contents: read
      packages: write
    concurrency:
      group: ${{ matrix.platform }}-build_push_docker_vorarbeiter
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          provenance: false
          tags: |
            ghcr.io/${{ github.repository_owner }}/vorarbeiter:${{ github.sha }}-${{ matrix.platform }}
            ghcr.io/${{ github.repository_owner }}/vorarbeiter:latest-${{ matrix.platform }}
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=ssh://git@github.com:${{ github.repository }}.git
            org.opencontainers.image.url=https://github.com/${{ github.repository }}
          build-args: |
            SENTRY_RELEASE=${{ github.sha }}
          platforms: linux/${{ matrix.platform }}
          no-cache: true

  docker-manifest:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs:
      - docker
    if: ${{ github.ref == 'refs/heads/main' }}
    permissions:
      packages: write
    steps:
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push vorarbeiter manifest
        run: |
          docker manifest create \
            ghcr.io/${{ github.repository_owner }}/vorarbeiter:${{ github.sha }} \
            --amend ghcr.io/${{ github.repository_owner }}/vorarbeiter:${{ github.sha }}-amd64 \
            --amend ghcr.io/${{ github.repository_owner }}/vorarbeiter:${{ github.sha }}-arm64

          docker manifest push ghcr.io/${{ github.repository_owner }}/vorarbeiter:${{ github.sha }}

          docker manifest create \
            ghcr.io/${{ github.repository_owner }}/vorarbeiter:latest \
            --amend ghcr.io/${{ github.repository_owner }}/vorarbeiter:${{ github.sha }}-amd64 \
            --amend ghcr.io/${{ github.repository_owner }}/vorarbeiter:${{ github.sha }}-arm64

          docker manifest push ghcr.io/${{ github.repository_owner }}/vorarbeiter:latest
