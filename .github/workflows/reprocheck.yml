name: Reprocheck pipeline
run-name: reprocheck ${{ inputs.app_id }}

concurrency:
  group: reprocheck-${{ inputs.app_id }}-${{ inputs.build_pipeline_id }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      app_id:
        description: 'Application ID'
        required: true
      git_ref:
        description: 'Git reference (unused, for backwards compatibility)'
        required: true
      build_pipeline_id:
        description: 'Build pipeline ID'
        required: true
      callback_url:
        description: 'Callback URL'
        required: true
      callback_token:
        description: 'Callback token'
        required: true
      build_type:
        description: 'Build type'
        required: true
        default: 'default'
      spot:
        description: 'Use spot instances'
        required: false
        default: 'true'

jobs:
  reprocheck:
    runs-on: ${{ github.run_id }}-${{ github.run_attempt }}/runner=medium-amd64/tag=arch-amd64/retry=false/spot=false
    timeout-minutes: 240
    steps:
      - name: Disable AppArmor
        run: |
          sudo aa-teardown >/dev/null 2>&1 || true
          sudo systemctl disable --now apparmor.service >/dev/null 2>&1 || true
          sudo sysctl -w kernel.apparmor_restrict_unprivileged_unconfined=0
          sudo sysctl -w kernel.apparmor_restrict_unprivileged_userns=0

      - name: Setup work directory
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/reproworkdir
          mkdir -p ${GITHUB_WORKSPACE}/reproworkdir/tmp
          chmod -R 777 ${GITHUB_WORKSPACE}/reproworkdir

      - name: Download seccomp profile
        run: |
          curl -s https://raw.githubusercontent.com/flathub-infra/vorarbeiter/refs/heads/main/flatpak.seccomp.json -o flatpak.seccomp.json

      - name: Run reprocheck
        continue-on-error: true
        id: reprocheck
        run: |
          docker run --rm \
            --entrypoint="" \
            --security-opt seccomp=./flatpak.seccomp.json \
            --security-opt apparmor=unconfined \
            --cap-drop all \
            -v /proc:/host/proc \
            -v "${GITHUB_WORKSPACE}/reproworkdir:/reproworkdir" \
            -e TMPDIR=/reproworkdir/tmp \
            -e GITHUB_SERVER_URL \
            -e GITHUB_REPOSITORY \
            -e GITHUB_RUN_ID \
            -w /reproworkdir \
            ghcr.io/flathub-infra/flatpak-builder-lint:unprivileged \
            flathub-repro-checker --json --appid "${{ inputs.app_id }}" | tee reprocheck-output.json

      - name: Save reprocheck output
        if: always()
        run: |
          if [ -f reprocheck-output.json ]; then
            cp reprocheck-output.json /tmp/reprocheck-result.json
          else
            echo '{"status_code": "1", "message": "Reprocheck failed to run", "appid": "${{ inputs.app_id }}", "timestamp": "'$(date -u +"%Y-%m-%dT%H:%M:%S.%6N%:z")'"}' > /tmp/reprocheck-result.json
          fi

      - name: Upload diffoscope results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: diffoscope-results-${{ github.sha }}-${{ github.run_id }}-${{ github.job }}-${{ github.run_attempt }}
          path: ./reproworkdir/diffoscope_result-*
          if-no-files-found: ignore

      - name: Upload reprocheck JSON output
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: reprocheck-json-${{ github.sha }}-${{ github.run_id }}-${{ github.job }}-${{ github.run_attempt }}
          path: /tmp/reprocheck-result.json
